<!-- TODO: this comment will self-destruct in future updates.
control.selectible is not resent in the lua. Remove it?
I'm removing LibScrollableMenu_OnSelected. There is now a simple way of doing this without globals
Remove unused virtuals at the bottom?
-->
<GuiXml>
	<Controls>
		<!-- OnMouseUp -->
		<Control name="LibScrollableMenu_Entry_Behavior" mouseEnabled="true" virtual="true">
			<OnMouseUp>
				local dropdown = self.m_dropdownObject
				if dropdown then
					<!-- As long as our class function accepts the parameters, then it's fine. -->
					dropdown:OnEntrySelected(self, button, upInside)
				end
			</OnMouseUp>
		</Control>
		
		<!-- Base row template with Multi-Icon -->
		<Control name="LibScrollableMenu_IconEntry_Template" virtual="true">
			<Anchor point="LEFT" offsetX="8" offsetY="0" />
			<Dimensions y="6" />
			<Controls>
				<Control name="$(parent)IconContainer">
					<Dimensions x="25"  y="25"/>
					<Anchor point="TOPLEFT" offsetX="0" offsetY="0"/>
					<Anchor point="BOTTOMLEFT" offsetY="-4" />
					<Controls>
						<Texture name="$(parent)Icon" inherits="ZO_MultiIcon">
							<Dimensions x="25"  y="25"/>
							<Anchor point="CENTER"/>
						</Texture>
					</Controls>
				</Control>
			</Controls>
		</Control>

		<Control name="LibScrollableMenu_ComboBoxEntry_Base" inherits="LibScrollableMenu_Entry_Behavior LibScrollableMenu_IconEntry_Template" virtual="true">
		
		<!-- Row templates -->
		<!-- Divider | no icon no handlers -->
		<Control name="LibScrollableMenu_ComboBoxDividerEntry" virtual="true">
			<Dimensions y="6" />
			<Controls>
				<Texture name="$(parent)Divider" hidden="false" inherits="ZO_BaseTooltipDivider">
					<Anchor point="LEFT" offsetX="-0" offsetY="-2.5" />
					<Anchor point="RIGHT" offsetX="0" offsetY="2.5" />
				</Texture>
			</Controls>
		</Control>

		<!-- Header | no handlers-->
		<Control name="LibScrollableMenu_ComboBoxHeaderEntry" inherits="LibScrollableMenu_IconEntry_Template" mouseEnabled="true" virtual="true">
			<Dimensions y="25" />
			<OnInitialized>
				self.isHeader = true
			</OnInitialized>
			
			<Controls>
				<Label name="$(parent)Label" verticalAlignment="CENTER" font="ZoFontWinH5" color="INTERFACE_COLOR_TYPE_TEXT_COLORS:INTERFACE_TEXT_CONTEXT_HIGHLIGHT" maxLineCount="1">
					<Anchor point="TOPLEFT" relativeTo="$(parent)IconContainer" relativePoint="TOPRIGHT" offsetX="0" />
					<Anchor point="BOTTOMRIGHT" offsetX="ZO_COMBO_BOX_ENTRY_TEMPLATE_LABEL_PADDING" offsetY="-5"  />
				</Label>
				<!-- ZoFontWinH5 inherits="ZO_HorizontalDivider" inherits="ZO_WideHorizontalDivider" offsetY="4" -->
				<Texture name="$(parent)Divider" inherits="ZO_Options_Divider">
					<Anchor point="BOTTOMLEFT" offsetX="0" offsetY="-5"/>
					<Anchor point="BOTTOMRIGHT" offsetX="0" offsetY="0" />
				</Texture>
			</Controls>
		</Control>
		
		<!-- Normal entry -->
		<Control name="LibScrollableMenu_ComboBoxEntry" inherits="ZO_ComboBoxEntry LibScrollableMenu_ComboBoxEntry_Base" mouseEnabled="true" virtual="true">
            <Dimensions y="ZO_COMBO_BOX_ENTRY_TEMPLATE_HEIGHT" />
			<OnInitialized>
				<!-- Is this still needed? -->
				self.selectible = true <!-- Denotes this is a selectible entry.   -->
			</OnInitialized>

			<Controls>
				<Label name="$(parent)Label" verticalAlignment="CENTER" override="true" wrapMode="ELLIPSIS" maxLineCount="1">
					<Anchor point="TOPLEFT" relativeTo="$(parent)IconContainer" relativePoint="TOPRIGHT" offsetX="1" />
					<Anchor point="RIGHT" offsetX="ZO_COMBO_BOX_ENTRY_TEMPLATE_LABEL_PADDING" />
				</Label>
			</Controls>
		</Control>
		
		<!-- Checkbox -->
		<Control name="LibScrollableMenu_ComboBoxCheckboxEntry" inherits="LibScrollableMenu_ComboBoxEntry" mouseEnabled="true" virtual="true">
			<Dimensions y="25" />
			
			<OnInitialized>
				self.Checkbox = self:GetNamedChild('Checkbox')
				self.selectible = true <!-- Denotes this is a selectible entry.   -->
			</OnInitialized>
			
			<!--OnMouseUp>
				ZO_CheckButton_OnClicked(self.Checkbox)
			</OnMouseUp-->
			
			<!--OnMouseDown>
				local onMouseUp = self:GetHandler("OnMouseExit")
				if onMouseUp ~= nil then
					onMouseUp(self)
				end
			</OnMouseDown-->
			
			<Controls>
				<Button name="$(parent)Checkbox" inherits="ZO_CheckButton" level="1">
					<!-- Centered on the icon -->
					<Anchor point="LEFT" relativeTo="$(parent)IconContainer" relativePoint="RIGHT" offsetX="1"/>
				</Button>
				<Label name="$(parent)Label" verticalAlignment="CENTER" override="true" wrapMode="ELLIPSIS" maxLineCount="1">
					<Anchor point="LEFT" relativeTo="$(parent)Checkbox" relativePoint="RIGHT" offsetX="4"/>
					<Anchor point="RIGHT" offsetX="-25" />
				</Label>
			</Controls>
		</Control>
		
		<!-- Submenu -->
		<Control name="LibScrollableMenu_ComboBoxSubmenuEntry" inherits="LibScrollableMenu_ComboBoxEntry" mouseEnabled="true" virtual="true">
			<Controls>
				<Label name="$(parent)Label" verticalAlignment="CENTER" override="true" wrapMode="ELLIPSIS" maxLineCount="1">
					<Anchor point="TOPLEFT" relativeTo="$(parent)IconContainer" relativePoint="TOPRIGHT" offsetX="1" />
					<Anchor point="RIGHT" offsetX="-25" />
				</Label>
				<Texture name="$(parent)Arrow" textureFile="EsoUI/Art/Miscellaneous/colorPicker_slider_vertical.dds">
					<TextureCoords left="0" right="0.5" top="0" bottom="1"/>
					<Dimensions x="16"  y="20"/>
					<Anchor point="LEFT" relativeTo="$(parent)Label" relativePoint="RIGHT" offsetY="0"/>
				</Texture>
			</Controls>
		</Control>
		
		<!-- The genuine Dropdown control. The scroll list container. 
			TLC so it can be forced above other dropdowns without having to consider layering
			Since some UI panels have layering set, we set it as overlay high, so it will be above those
		-->
		<TopLevelControl name="LibScrollableMenu_Keyboard_Template" layer="OVERLAY" tier="HIGH" hidden="true" mouseEnabled="true" clampedToScreen="true" virtual="true">
			<!--Anchor point="TOPLEFT" relativePoint="BOTTOMLEFT" /-->
			<!-- Width will be set programmatically -->
			<OnEffectivelyShown>
				<!-- For some reason this is not working for contextmenu. So, I had added it in a couple places in the lua
				If we are unable to make this work then it can be removed-->
				self:BringWindowToTop()
			</OnEffectivelyShown>

			<Controls>
				<Backdrop name="$(parent)BG" inherits="ZO_DefaultBackdrop">
					<AnchorFill />
				</Backdrop>

				<Control name="$(parent)Scroll" inherits="ZO_ScrollList">
					<Anchor point="TOPLEFT" offsetY="ZO_SCROLLABLE_COMBO_BOX_LIST_PADDING_Y" />
					<Anchor point="BOTTOMRIGHT" offsetY="-ZO_SCROLLABLE_COMBO_BOX_LIST_PADDING_Y" />
				</Control>
				
                <!--Label name="$(parent)SelectedItemText" font="ZoFontGame" color="INTERFACE_COLOR_TYPE_TEXT_COLORS:INTERFACE_TEXT_COLOR_SELECTED" wrapMode="ELLIPSIS" verticalAlignment="CENTER">
                    <Anchor point="TOPLEFT" offsetX="8" />
                    <Anchor point="BOTTOMRIGHT" offsetX="-20" />
                </Label-->

			</Controls>
		</TopLevelControl>
		
		
		<!-- Controls not used.
			I had added these controls for simple virtuals to be used by addons.
			Such as the ZO_ComboBox with the OnMouseExit, which is not needed anymore.
		-->
		
		<Control name="LibScrollableMenu_ComboBox" inherits="ZO_ComboBox" mouseEnabled="false" clampedToScreen="true" hidden="true" virtual="true">
			<Dimensions x="135"  y="31"/>
			<Anchor point="TOPLEFT" relativeTo="$(parent)" relativePoint="TOPLEFT" />
			<OnInitialized>
				self.comboBox = self
			</OnInitialized>
			<Controls>
				<Control name="$(parent)Dropdown" override="true">
					<!--OnMouseExit>
						I had added this a while back so that dropdowns would fire OnMouseExit for when one had previously moved off a row, to see if the dropdown should be closed.
						LibScrollableMenu_Entry_OnMouseExit(self)
					</OnMouseExit-->
				</Control>
			</Controls>
		</Control>
		
		<!--Control name="LibScrollableMenu_ComboBox_Container" mouseEnabled="true" clampedToScreen="true" hidden="false" virtual="true">
			<Dimensions x="135"  y="31"/>
			<OnInitialized>
				self.comboBox = self:GetNamedChild('Dropdown')
				self.dropdown = ZO_ComboBox_ObjectFromContainer(self:GetNamedChild("Dropdown")) -- m_comboBox
			</OnInitialized>
			
			<Controls>
				<Control name="$(parent)Dropdown" inherits="ZO_ComboBox">
					<Dimensions x="135"  y="31"/>
					<Anchor point="TOPLEFT" relativeTo="$(parent)" relativePoint="TOPLEFT" />
				</Control>
			</Controls>
		</Control-->
		
		<!--TopLevelControl name="LibScrollableMenu_ComboBox_TopLevel" inherits="ZO_ComboBox" hidden="false" virtual="true">
			<OnEffectivelyShown>
				self:BringWindowToTop()
			</OnEffectivelyShown>
		</TopLevelControl-->
		
	</Controls>
</GuiXml>


